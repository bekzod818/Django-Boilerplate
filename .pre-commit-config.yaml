exclude: '(\.git|\.mypy_cache|\.pytest_cache|\.tox|\.venv|venv|.env|env|\.vscode|static|media/|.*/templates|.*/migrations)'
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-added-large-files
      - id: check-ast
      - id: check-case-conflict
      - id: check-docstring-first
      - id: check-json
      - id: check-merge-conflict
      - id: check-toml
      - id: check-xml
      - id: check-yaml
      - id: debug-statements
      - id: end-of-file-fixer
      - id: name-tests-test
      - id: check-byte-order-marker
  - repo: https://github.com/ambv/black
    rev: 22.6.0
    hooks:
      - id: black
        name: black
        entry: black
        language: system
        types: [ python ]
        args: [ --target-version=py310, --target-version=py310 ]
  #   Why are Flake8â€™s E203 and W503 violated?
  # Because they go against PEP 8. E203 falsely triggers on list slices, and adhering to W503 hinders readability
  #  because operators are misaligned. Disable W503 and enable the disabled-by-default counterpart W504.
  #  E203 should be disabled while changes are still discussed.
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v0.971
    hooks:
      - id: mypy
        name: Run type checks
        args: [ "--ignore-missing-imports", "--install-types", "--non-interactive" ]
  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        name: isort (python)
        entry: isort
        require_serial: true
        language: python
        types_or: [ cython, pyi, python ]
        args: [ '--profile', 'black', '--filter-files' ]
        minimum_pre_commit_version: '2.9.2'
  - repo: local
    hooks:
      - id: autoflake
        name: autoflake
        entry: autoflake
        language: system
        types: [ python ]
        args: [ --in-place, --remove-duplicate-keys, --remove-all-unused-imports ]

      - id: pyupgrade
        name: pyupgrade
        entry: pyupgrade
        language: system
        types: [ python ]
        args: [ --py37-plus ]

      - id: yesqa
        name: yesqa
        entry: yesqa
        language: system
        types: [ python ]

      - id: migrations-check
        language: system
        name: Check for uncreated migrations.
        entry: bash -c "docker-compose -f docker-compose.dev.yml exec -T web python manage.py makemigrations --check --dry-run"
        types: [ "python" ]
        pass_filenames: false

      - id: django-test
        name: django-test
        entry: bash -c "docker-compose -f docker-compose.dev.yml exec -T web python manage.py test"
        always_run: true
        pass_filenames: false
        language: system
